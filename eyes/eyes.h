/*--------------------------------------------------------------------------------------*//*                                                                                      *//*  File:       eyes.h                                                                  *//*                                                                                      *//*  Contains:   The data type declarations and forward references to routines.          *//*                                                                                      *//*  Written by: Norman Jaffe                                                            *//*                                                                                      *//*  Copyright:  (c) 2001 by T. H. Schiphorst, N. Jaffe, K. Gregory and G. I. Gregson.   *//*                                                                                      *//*              All rights reserved. Redistribution and use in source and binary forms, *//*              with or without modification, are permitted provided that the following *//*              conditions are met:                                                     *//*                * Redistributions of source code must retain the above copyright      *//*                  notice, this list of conditions and the following disclaimer.       *//*                * Redistributions in binary form must reproduce the above copyright   *//*                  notice, this list of conditions and the following disclaimer in the *//*                  documentation and/or other materials provided with the              *//*                  distribution.                                                       *//*                * Neither the name of the copyright holders nor the names of its      *//*                  contributors may be used to endorse or promote products derived     *//*                  from this software without specific prior written permission.       *//*                                                                                      *//*              THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS     *//*              "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT       *//*              LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A *//*              PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      *//*              OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   *//*              SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        *//*              LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   *//*              DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   *//*              THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     *//*              (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   *//*              OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    *//*                                                                                      *//*  Created:    2001/08/23                                                              *//*                                                                                      *//*--------------------------------------------------------------------------------------*/#if (! defined(EYES_H_)) #define EYES_H_ /* */  #define USE_SYSLOG /* */ #include <CodeFragments.h> #include "MissingAndExtra.h" #include "genericListOutput.h" #include "EyeEntryPoints.h" #define OUR_NAME      "êyês" #define OUR_RES_NUMB  17184 #define OUTPUT_PREFIX "êyês: "enum {  kDoAssistValid = (1 << 0),  kDoDisplayValid = (1 << 1),  kDoGetSettingsValid = (1 << 2),  kDoGetValuesValid = (1 << 3),  kDoGraphicsValid = (1 << 4),  kDoGoValid = (1 << 5),  kDoIndexValid = (1 << 6),  kDoMyNameValid = (1 << 7),  kDoSaveValid = (1 << 8),  kDoSetParameterDoubleValid = (1 << 9),  kDoSetParameterListValid = (1 << 10),  kDoSetParameterLongValid = (1 << 11),  kDoSetParametersValid = (1 << 12),  kDoSourceValid = (1 << 13),  kDoSource2Valid = (1 << 14),  kDoTargetValid = (1 << 15),  kMainValid = (1 << 16),  kNiamValid = (1 << 17),  kOnCreateValid = (1 << 18),  kOnDestroyValid = (1 << 19),  kOnReloadValid = (1 << 20)};struct EyeDescriptor{  EyeDescriptor *   fNext;  EyeDescriptor *   fPrevious;  PSymbol           fName;  FSSpec            fSpec;  Ptr               fShared;  long              fRefCount;  long              fValidMask; #if __powerc  CFragConnectionID fConnID;  Ptr               fMainAddress;  Pvoid             fRegistry;  #if COMPILE_FOR_OSX_4  ProcPtr           fDoAssistFun;  ProcPtr           fDoDisplayFun;  ProcPtr           fDoGetSettingsFun;  ProcPtr           fDoGetValuesFun;  ProcPtr           fDoGoFun;  ProcPtr           fDoGraphicsFun;  ProcPtr           fDoIndexFun;  ProcPtr           fDoMyNameFun;  ProcPtr           fDoSaveFun;  ProcPtr           fDoSetParameterDoubleFun;  ProcPtr           fDoSetParameterListFun;  ProcPtr           fDoSetParameterLongFun;  ProcPtr           fDoSetParametersFun;  ProcPtr           fDoSourceFun;  ProcPtr           fDoSource2Fun;  ProcPtr           fDoTargetFun;  ProcPtr           fMainFun;  ProcPtr           fNiamFun;  ProcPtr           fOnCreateFun;  ProcPtr           fOnDestroyFun;  ProcPtr           fOnReloadFun;  #endif /* COMPILE_FOR_OSX_4 */  #if COMPILE_FOR_OS9_4  UniversalProcPtr  fDoAssistUpp;  UniversalProcPtr  fDoDisplayUpp;  UniversalProcPtr  fDoGetSettingsUpp;  UniversalProcPtr  fDoGetValuesUpp;  UniversalProcPtr  fDoGoUpp;  UniversalProcPtr  fDoGraphicsUpp;  UniversalProcPtr  fDoIndexUpp;  UniversalProcPtr  fDoMyNameUpp;  UniversalProcPtr  fDoSaveUpp;  UniversalProcPtr  fDoSetParameterDoubleUpp;  UniversalProcPtr  fDoSetParameterListUpp;  UniversalProcPtr  fDoSetParameterLongUpp;  UniversalProcPtr  fDoSetParametersUpp;  UniversalProcPtr  fDoSourceUpp;  UniversalProcPtr  fDoSource2Upp;  UniversalProcPtr  fDoTargetUpp;  UniversalProcPtr  fMainUpp;  UniversalProcPtr  fNiamUpp;  UniversalProcPtr  fOnCreateUpp;  UniversalProcPtr  fOnDestroyUpp;  UniversalProcPtr  fOnReloadUpp;  #endif /* COMPILE_FOR_OS9_4 */ #endif /* __powerc */}; /* EyeDescriptor */typedef EyeDescriptor * EyeDescriptorPtr;struct EyeData{  Object           fObject;  EyeDescriptorPtr fActiveEye;  short            fNumInlets;  short            fNumOutlets;  long             fInletNumber;  Ptr              fPrivate;  HOutlet          fOutlets;  Hvoid            fProxies;  OwnerData        fOwnerInfo;}; /* EyeData */typedef EyeData * EyePtr;Pvoid cmd_Aspect  (EyePtr xx);Pvoid cmd_Click  (EyePtr xx,   Point  pt,   short  dblClick,   short  modifiers);Pvoid cmd_Dblclick  (EyePtr xx);Pvoid cmd_Dsize  (EyePtr xx,   long   value1,   long   value2);Pvoid cmd_Dump  (EyePtr  xx,   PSymbol message,   short   argc,   PAtom   argv);Pvoid cmd_Eyes  (EyePtr  xx,   PSymbol message,   short   argc,   PAtom   argv);Pvoid cmd_Full  (EyePtr xx);Pvoid cmd_Hide  (EyePtr xx);Pvoid cmd_Image  (EyePtr  xx,   PSymbol message,   short   argc,   PAtom   argv);Pvoid cmd_Images  (EyePtr  xx,   PSymbol message,   short   argc,   PAtom   argv);Pvoid cmd_Loc  (EyePtr xx,   long   value1,   long   value2);Pvoid cmd_Noaspect  (EyePtr xx);Pvoid cmd_Psave  (EyePtr xx,   Pvoid  dest);Pvoid cmd_Scale  (EyePtr xx,   double message);Pvoid cmd_Sensor  (EyePtr  xx,   PSymbol message,   short   argc,   PAtom   argv);Pvoid cmd_Show  (EyePtr xx);Pvoid cmd_Size  (EyePtr xx,   long   value1,   long   value2,   long   value3,   long   value4);Pvoid cmd_Update  (EyePtr xx);Pvoid cmd_Window  (EyePtr xx);Pvoid cmd_Windowresize  (EyePtr xx,   short  hsize,   short  vsize);Pvoid cmd_X  (EyePtr xx,   long   value);Pvoid cmd_Xsize  (EyePtr xx,   long   value);Pvoid cmd_Y  (EyePtr xx,   long   value);Pvoid cmd_Ysize  (EyePtr xx,   long   value);void refreshDescriptors  (EyePtr xx);void rescanEyes  (void); #define EYE_FIXED_ARGUMENTS \	&xx->fOwnerInfo, descriptor->fShared, xx->fPrivateStandardRoutineDeclarations(EyePtr)mextern(long)             gAppDir;mextern(FSSpec)           gAppFile;mextern(short)            gAppVRef;mextern(PSymbol)		  		gBangSymbol;mextern(PSymbol)          gEmptySymbol;mextern(PSymbol)          gFloatSymbol;mextern(PSymbol)          gIntSymbol;mextern(PSymbol)		  		gListSymbol;mextern(EyeDescriptorPtr) gEyeAnchor;mextern(long)             gEyeCount;mextern(long)             gEyeDir;mextern(Str255)           gEyeFolderAlias;mextern(bool)             gEyeFolderFound;mextern(Str255)           gEyeFolderName;mextern(short)            gEyeVol;mextern(PSymbol)		  		gReloadSymbol;mextern(PSymbol)  		  	gRescanSymbol;mextern(long)             gSysParID;mextern(short)            gSysVRef;#endif /* not EYES_H_ */