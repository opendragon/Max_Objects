#File: state_file;# Each line is terminated with a semicolon;# A comment starts with a '#' character;# Note that white space is critical around symbols and operators;# State symbols;[ alpha omega beta test-state theta gamma ]# Starting state;alpha# Stop states;[ theta ]# Error states;[ omega ] # Transitions;# The format is: current-state input -> new-state output ;# or current-state input -? probability new-state output ;# where output can contain the symbol $ to indicate the matching input;# or the symbol $$ to indicate the overflow values;# The special symbol @s represents any valid symbol on input;# The special symbol @n represents any valid number on input;# The special symbol @r represents a range of values (the next two numbers in the input);# The special form '? represents the numeric equivalent to the character ? for input;# The probability is in the form of a fraction between 0 and 1;alpha 42 -> beta $ ;alpha 'a -> beta $;alpha @r 'b 'g -> theta $;test-state garbage -> test-state ;beta blorg -> alpha ;beta blirg -> theta $ ;alpha @s -> gamma $$ $;gamma @n -> beta chuck you $ times;theta @s -> theta symbol;theta @n -> theta number;gamma @s -? 0.30 beta whoo hoo; #probabilistic transition to beta;gamma @s -> gamma; #handle non-branch to beta;